{
  "hash": "7c4c5005343e6ee70a6995db41de1305",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Considering space\"\nformat:\n  html: default\n  revealjs:\n    fontsize: 24px\n    output-file: slides_space.html\n    footer: \"[AES_707](https://petrpajdla.github.io/stat4arch/) *Statistics seminar for archaeologists* | [Space](./space.html)\"\n    chalkboard:\n      theme: whiteboard\n      chalk-effect: 0.0\n  pdf: default\nexecute:\n  echo: true\n  warning: false\n  cache: true\n---\n\n\n\n\n## Objectives  {background-color=\"#FAF1A4\"}\n\n- Learn what is spatial data.\n- Learn how spatial data is represented in R.\n- Learn basic operations with vector data.\n- Create basic maps.\n\n\n## What is Earth's shape?\n\n:::: {.columns}\n::: {.column width=20%}\n\n- Spheroid\n- Ellipsoid\n- Geoid\n- Potato\n\n:::\n::: {.column width=80%}\n\n![Geocentric and local geodetic datums shown on top of a geoid (in false color and the vertical exaggeration by 10,000 scale factor). From Lovelace, Nowosad, Muenchow: [Geocomputation with R](https://r.geocompx.org/)](https://r.geocompx.org/figures/02_datum_fig.png)\n\n:::\n::::\n\n\n## \n\n<!-- - How to transform a curved surface of an ellipsoid into a plane? -->\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n:::: {.columns}\n::: {.column width=20%}\n### Projections \n\n*How to transform a curved surface of an ellipsoid into a plane?*\n:::\n::: {.column width=30%}\n![](https://gistbok.ucgis.org/sites/default/files/figure2-projections.png)\n:::\n::: {.column width=50%}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Mercator (1569)](space_files/figure-pdf/unnamed-chunk-2-1.pdf)\n:::\n:::\n\n\n\n:::\n::::\n\n:::: {.columns}\n::: {.column width=50%}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Robinson (1963)](space_files/figure-pdf/unnamed-chunk-3-1.pdf)\n:::\n:::\n\n\n\n:::\n::: {.column width=50%}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Albers (1805)](space_files/figure-pdf/unnamed-chunk-4-1.pdf)\n:::\n:::\n\n\n\n:::\n::::\n\n\n## Coordinate reference systems \n\n- CRS defines how spatial data relate to the surface of the Earth.\n\n:::: {.columns}\n::: {.column width=50% .fragment}\n### Geographic\n\n#### WGS 84\n\n- EPSG: 4326\n- latitude: N/S, 0˚ (equator) -- 90˚ (poles)\n- longitude: E/W, 0˚ (prime meridian) -- 180° (*antimeridian*)\n- in degrees, minutes:  \n  `N 49°44.62543', E 15°20.31830'`\n- in decimal degrees:  \n  `49.7437572N, 15.3386383E`\n- [Package `parzer`](https://docs.ropensci.org/parzer/index.html) helps to parse coordinates in weird formats.\n:::\n::: {.column width=50% .fragment}\n### Projected\n\n- Many operations can be done only with projected coordinates!\n\n::: {.fragment}\n#### S-JTSK / Křovák East North\n\n- EPSG: 5514\n- Czech Republic and Slovakia\n- in meters, in negative numbers:  \n  `-682473.3, -1089493`\n:::\n::: {.fragment}\n#### WGS 84 / UTM\n\n- EPSG for zone 33N: 32633\n- Czech Republic is in zone UTM 33N\n:::\n:::\n::::\n\n\n## Czech Republic in WGS 84\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](space_files/figure-pdf/unnamed-chunk-6-1.pdf)\n:::\n:::\n\n\n\n\n## Czech Republic in WGS 84 / UTM {auto-animate=true}\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](space_files/figure-pdf/unnamed-chunk-7-1.pdf)\n:::\n:::\n\n\n\n\n## Czech Republic in S-JTSK / Krovak East North {auto-animate=true}\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](space_files/figure-pdf/unnamed-chunk-8-1.pdf)\n:::\n:::\n\n\n\n\n\n## Raster and vector data\n\n![From <https://urstudio.sec.sg/wp-content/uploads/2022/03/featured-3.png>](https://urstudio.sec.sg/wp-content/uploads/2022/03/featured-3.png)\n\n\n## Vector data \n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](space_files/figure-pdf/unnamed-chunk-9-1.pdf)\n:::\n:::\n\n\n\n\nPoints, lines, polygons...\n\n\n## Packages\n\n:::: {.columns}\n::: {.column width=50%}\n\n### `sf` package\n\n- Vector data, *simple features*\n- <https://r-spatial.github.io/sf/>\n- [Cheatsheet](https://github.com/rstudio/cheatsheets/blob/main/sf.pdf)\n\n![](https://user-images.githubusercontent.com/520851/50280460-e35c1880-044c-11e9-9ed7-cc46754e49db.jpg)\n\n:::\n::: {.column width=50%}\n\n### Raster data\n\n- [`terra` package](https://rspatial.org/pkg/) and its predeccessor, `raster`\n- [`stars` package](https://r-spatial.github.io/stars/) -- spatiotemporal arrays, raster and vector data cubes\n\n### Spatial statistics \n\n- [`spatstat` package](https://spatstat.org/)\n\n### Making maps\n\n- `ggplot2`\n- [`tmap` package](https://r-tmap.github.io/tmap/) -- thematic maps\n- [`leaflet` package](https://rstudio.github.io/leaflet/) -- interactive maps \n\n:::\n::::\n\n\n## Code along {background-color=\"#B5E2FF\"}\n\n\n## Dataset \n\n:::: {.columns}\n::: {.column width=40%}\n\n![](./figs/lasoles_joad.png)\n\n:::\n::: {.column width=60%}\n\n- Dataset from *Journal of Open Archaeology Data* paper\n- Article DOI: [10.5334/joad.85](https://doi.org/10.5334/joad.85)\n- Data DOI: [10.5281/zenodo.5728242](https://doi.org/10.5281/zenodo.5728242)\n- Table [`LASOLES_14C_database.csv`](https://zenodo.org/records/5728242/files/LASOLES_14C_database.csv?download=1)\n\n![(Tkáč, Kolář 2021)](https://storage.googleapis.com/jnl-up-j-joad-files/journals/1/articles/85/submission/proof/85-10-780-1-17-20211210.png){width=80%}\n\n:::\n::::\n\n\n## Reading the data \n\n- Data is in CSV format, separated by semicolon (`;`)\n- Columns `Latitude_WGS84` and `Longitude_WGS84`\n- Coordinate reference system is WGS 84 (EPSG `4326`)\n\n::: {.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlasoles <- read.csv(\"./data/LASOLES_14C_database.csv\", sep = \";\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 x 5\n  ID_Date  Latitude_WGS84 Longitude_WGS84 Site_category_ENG Contex_dating_AMCR\n  <chr>             <dbl>           <dbl> <chr>             <chr>             \n1 CzArch_1           49.1            16.6 hillfort          br.st             \n2 CzArch_5           50.1            14.5 settlement        bronz             \n3 CzArch_6           49.8            17.0 settlement        ne.lin            \n4 CzArch_7           49.8            17.0 settlement        ne.lin            \n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlasoles_wgs84 <- st_as_sf(lasoles, coords = c(x = \"Longitude_WGS84\", y = \"Latitude_WGS84\"), crs = 4326)\nhead(lasoles_wgs84, 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 4 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14.52986 ymin: 49.05189 xmax: 16.95067 ymax: 50.05246\nGeodetic CRS:  WGS 84\n# A tibble: 4 x 4\n  ID_Date  Site_category_ENG Contex_dating_AMCR            geometry\n  <chr>    <chr>             <chr>                      <POINT [°]>\n1 CzArch_1 hillfort          br.st              (16.62982 49.05189)\n2 CzArch_5 settlement        bronz              (14.52986 50.05246)\n3 CzArch_6 settlement        ne.lin             (16.95067 49.77669)\n4 CzArch_7 settlement        ne.lin             (16.95067 49.77669)\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n## Reprojecting CRS\n\nFunction `st_transform(x, crs)`\n\nEPSG codes:\n\n- WGS 84: `4326`\n- S-JTSK East-North: `5514`\n- UTM 33N: `32633`\n- Find more at <https://epsg.io/>\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlasoles_sjtsk <- st_transform(lasoles_wgs84,  crs = \"EPSG:5514\")\nhead(lasoles_sjtsk, 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 4 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -735634.8 ymin: -1176759 xmax: -566666.7 ymax: -1047924\nProjected CRS: S-JTSK / Krovak East North\n# A tibble: 4 x 4\n  ID_Date  Site_category_ENG Contex_dating_AMCR             geometry\n  <chr>    <chr>             <chr>                       <POINT [m]>\n1 CzArch_1 hillfort          br.st              (-598287.7 -1176759)\n2 CzArch_5 settlement        bronz              (-735634.8 -1047924)\n3 CzArch_6 settlement        ne.lin             (-566666.7 -1099048)\n4 CzArch_7 settlement        ne.lin             (-566666.7 -1099048)\n```\n\n\n:::\n:::\n\n\n\n\n\n<!-- ## `sf` Object helper functions\n\n:::: {.columns}\n::: {.column width=50%}\n\n- `st_geometry()` -- returns only geometry\n- `st_geometry_type()` -- returns type of geometry (point, line, polygon...) for each object\n- `st_drop_geometry()` -- returns only *attributes*/*fields*\n- `st_coordinates()` -- returns coordinates as a data frame\n- `st_crs()` -- CRS of the layer as a WKT \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_geometry_type(lasoles_sjtsk) %>% head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] POINT POINT POINT POINT POINT POINT\n18 Levels: GEOMETRY POINT LINESTRING POLYGON MULTIPOINT ... TRIANGLE\n```\n\n\n:::\n:::\n\n\n\n:::\n::: {.column width=50%}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_crs(lasoles_sjtsk)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:5514 \n  wkt:\nPROJCRS[\"S-JTSK / Krovak East North\",\n    BASEGEOGCRS[\"S-JTSK\",\n        DATUM[\"System of the Unified Trigonometrical Cadastral Network\",\n            ELLIPSOID[\"Bessel 1841\",6377397.155,299.1528128,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4156]],\n    CONVERSION[\"Krovak East North (Greenwich)\",\n        METHOD[\"Krovak (North Orientated)\",\n            ID[\"EPSG\",1041]],\n        PARAMETER[\"Latitude of projection centre\",49.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8811]],\n        PARAMETER[\"Longitude of origin\",24.8333333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8833]],\n        PARAMETER[\"Co-latitude of cone axis\",30.2881397527778,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",1036]],\n        PARAMETER[\"Latitude of pseudo standard parallel\",78.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8818]],\n        PARAMETER[\"Scale factor on pseudo standard parallel\",0.9999,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8819]],\n        PARAMETER[\"False easting\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"easting (X)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"northing (Y)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"GIS.\"],\n        AREA[\"Czechia; Slovakia.\"],\n        BBOX[47.73,12.09,51.06,22.56]],\n    ID[\"EPSG\",5514]]\n```\n\n\n:::\n:::\n\n\n\n:::\n:::: -->\n\n\n## Making maps\n\nGeom `geom_sf()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lasoles_sjtsk) +\n  geom_sf() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](space_files/figure-pdf/unnamed-chunk-16-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n## Some background data...\n\nPackage `RCzechia` ([Lacko, 2023](https://rczechia.jla-data.net/)) has spatial data for the Czech republic...\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkraje <- RCzechia::kraje()\nhead(kraje, 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 4 features and 3 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 12.40056 ymin: 48.55189 xmax: 15.60422 ymax: 50.61901\nGeodetic CRS:  WGS 84\n  KOD_KRAJ KOD_CZNUTS3        NAZ_CZNUTS3                       geometry\n1     3018       CZ010 Hlavní město Praha MULTIPOLYGON (((14.49806 50...\n2     3026       CZ020   Středočeský kraj POLYGON ((15.16973 49.61046...\n3     3034       CZ031     Jihočeský kraj MULTIPOLYGON (((15.4962 48....\n4     3042       CZ032      Plzeňský kraj MULTIPOLYGON (((13.60536 49...\n```\n\n\n:::\n:::\n\n\n\n\n::: {.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkraje <- st_transform(kraje, crs = \"EPSG:5514\")\nhead(kraje, 4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 4 features and 3 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -891822.3 ymin: -1211576 xmax: -665628.7 ymax: -989063.4\nProjected CRS: S-JTSK / Krovak East North\n  KOD_KRAJ KOD_CZNUTS3        NAZ_CZNUTS3                       geometry\n1     3018       CZ010 Hlavní město Praha MULTIPOLYGON (((-736092 -10...\n2     3026       CZ020   Středočeský kraj POLYGON ((-696420.7 -110267...\n3     3034       CZ031     Jihočeský kraj MULTIPOLYGON (((-681445.6 -...\n4     3042       CZ032      Plzeňský kraj MULTIPOLYGON (((-817386.4 -...\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n## Making maps\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lasoles_sjtsk) +\n  geom_sf(data = kraje) +\n  geom_sf() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](space_files/figure-pdf/unnamed-chunk-19-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n## Geometry operations \n\n### Unions \n\n`st_union()`\n\n:::: {.columns}\n::: {.column width=50% .fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(kraje, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 2 features and 3 fields\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -816235.3 ymin: -1109600 xmax: -665628.7 ymax: -989063.4\nProjected CRS: S-JTSK / Krovak East North\n  KOD_KRAJ KOD_CZNUTS3        NAZ_CZNUTS3                       geometry\n1     3018       CZ010 Hlavní město Praha MULTIPOLYGON (((-736092 -10...\n2     3026       CZ020   Středočeský kraj POLYGON ((-696420.7 -110267...\n```\n\n\n:::\n\n```{.r .cell-code}\nrepublika <- st_union(kraje)\nrepublika\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 1 feature \nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -904576.9 ymin: -1227293 xmax: -431723.3 ymax: -935236.5\nProjected CRS: S-JTSK / Krovak East North\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n:::\n::: {.column width=50% .fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrepublika %>% \n  ggplot() +\n   geom_sf() +\n   theme_minimal()\n```\n\n::: {.cell-output-display}\n![](space_files/figure-pdf/unnamed-chunk-22-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n:::\n::::\n\n## Geometry operations \n\n:::: {.columns}\n::: {.column width=50%}\n\n### Centroids\n\n`st_centroid()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstred <- st_centroid(republika)\nstred\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 1 feature \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -682473.3 ymin: -1089493 xmax: -682473.3 ymax: -1089493\nProjected CRS: S-JTSK / Krovak East North\n```\n\n\n:::\n:::\n\n\n\n::: {.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = republika) +\n  geom_sf(data = stred, size = 4) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](space_files/figure-pdf/unnamed-chunk-24-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n:::\n:::\n::: {.column width=50% .fragment}\n\n### Buffers\n\n`st_buffer()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbuffer <- st_buffer(stred, 20000)\nbuffer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeometry set for 1 feature \nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -702473.3 ymin: -1109493 xmax: -662473.3 ymax: -1069493\nProjected CRS: S-JTSK / Krovak East North\n```\n\n\n:::\n:::\n\n\n\n::: {.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() +\n  geom_sf(data = republika) +\n  geom_sf(data = buffer, fill = \"forestgreen\") +\n  geom_sf(data = stred, size = 4) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](space_files/figure-pdf/unnamed-chunk-26-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n:::\n:::\n::::\n\n\n## Spatial operations\n\n### Topological relations \n\nMany types of raletionships, the most generic one is **intersection**:  \n`st_intersects(x, y)`\n\n:::: {.columns}\n::: {.column width=50%}\n::: {.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprunik <- st_intersects(kraje, stred)\nprunik\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSparse geometry binary predicate list of length 14, where the predicate\nwas `intersects'\nfirst 10 elements:\n 1: (empty)\n 2: (empty)\n 3: (empty)\n 4: (empty)\n 5: (empty)\n 6: (empty)\n 7: (empty)\n 8: (empty)\n 9: (empty)\n 10: 1\n```\n\n\n:::\n:::\n\n\n\n:::\n::: {.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlengths(prunik)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 0 0 0 0 0 0 0 0 0 1 0 0 0 0\n```\n\n\n:::\n:::\n\n\n\n:::\n::: {.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlengths(prunik) > 0\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n[13] FALSE FALSE\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n::: {.column width=50%}\n::: {.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkraje %>%\n  dplyr::filter(lengths(prunik) > 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 1 feature and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -719989.4 ymin: -1181194 xmax: -607864.3 ymax: -1077931\nProjected CRS: S-JTSK / Krovak East North\n  KOD_KRAJ KOD_CZNUTS3   NAZ_CZNUTS3                       geometry\n1     3107       CZ063 Kraj Vysočina MULTIPOLYGON (((-711377.1 -...\n```\n\n\n:::\n:::\n\n\n\n:::\n::: {.fragment}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](space_files/figure-pdf/unnamed-chunk-31-1.pdf)\n:::\n:::\n\n\n\n:::\n:::\n::::\n\n\n## Writing/reading spatial data\n\n`st_read()` -- reads spatial data from the path (data source name, and layer name)  \n`st_write()` -- writes an object to a specified path (DNS and layer name) \n\nThe functions detect what *driver* to use by the extension.\n\n- For vector data, use [`OGC GeoPackage`](https://www.geopackage.org/) format (.gpkg)\n- Do not use ESRI Shapefile (.shp) -- it is old and has many limitations (see [here](http://switchfromshapefile.org/) for discussion)\n\n::: {.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(republika, here::here(\"czrep.gpkg\"))\n```\n:::\n\n\n\n```\nWriting layer `czrep' to data source \n  `<...>/czrep.gpkg' using driver `GPKG'\nWriting 1 features with 1 fields and geometry type Polygon.\n```\n:::\n\n::: {.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrepublika <- st_read(here::here(\"czrep.gpkg\"))\n```\n:::\n\n\n\n```\nReading layer `czrep' from data source `<...>/czrep.gpkg' using driver `GPKG'\nSimple feature collection with 1 feature and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: -904576.9 ymin: -1227293 xmax: -431723.3 ymax: -935236.5\nProjected CRS: S-JTSK / Krovak East North\n```\n:::\n\n\n## Exercise {background-color=\"#B5E2FF\"}\n\n1. Find out how many *radiocarbon dated samples* are located within distance 15 km (or closer) from Brno.  \n\nBrno is this point:  \n    \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbrno <- st_point(c(16.6078411, 49.2002211)) %>% \n          st_geometry() %>% \n          st_set_crs(\"EPSG:4326\")\n```\n:::\n\n\n\n\n2. How many of these radiocarbon dates are from hillforts (`Site_category_ENG`)?\n3. Create map of the Czech republic with a point showing Brno.\n4. Create a map of all *radiocarbon dated samples* in *Jihomoravský kraj*.\n\n\n<!-- ## Some more mapping {.scrollable}\n\n\nggplot() +\n  geom_sf(data = kraje) +\n  geom_sf(data = lasoles_sjtsk, aes(color = Site_category_ENG)) +\n  theme_minimal()\n``` -->\n\n\n## Where to learn more... \n\n- CRAN Task View: [Analysis of Spatial Data](https://cran.r-project.org/web/views/Spatial.html)\n- Books:\n\n[![](https://r.geocompx.org/images/cover.png){height=300px}](https://r.geocompx.org/) \n[![](https://r-spatial.org/book/images/cover.jpg){height=300px}](https://r-spatial.org/book/) \n![](https://images.routledge.com/common/jackets/amazon/978148221/9781482210200.jpg){height=300px} \n![](https://media.springernature.com/full/springer-static/cover-hires/book/978-3-319-29538-1?as=webp){height=300px}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}