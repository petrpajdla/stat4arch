{
  "hash": "55b73181cc86f0557a8fb02a08d017ad",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Normal distribution\"\nformat:\n  html: default\n  revealjs:\n    fontsize: 24px\n    output-file: slides_norm.html\n    footer: \"[AES_707](https://petrpajdla.github.io/stat4arch/) *Statistics seminar for archaeologists* | [Normal distribution](./norm.html)\"\n    chalkboard:\n      theme: whiteboard\n      chalk-effect: 0.0\n  pdf: default\nexecute:\n  echo: true\n  warning: false\n---\n\n\n\n## Reflection {background-color=\"#FAF1A4\"}\n\nYou know how to do the basics:\n\n::: {.incremental}\n- read data into R,\n- explore the data set,\n- count some statistics,\n- create and interpret basic plots,\n- describe the plots with labels, change the style, save them.\n:::\n\n::: {.fragment}\nSome additions...\n\n::: {.incremental}\n- {{< bi patch-question >}} *Where do I get help?*\n- {{< bi patch-check >}} In [cheat sheets](https://posit.co/resources/cheatsheets/).\n- {{< bi patch-question >}} *What type of graph should I choose?*\n- {{< bi patch-check >}} Look in [R Graph Gallery](https://r-graph-gallery.com/index.html).\n- {{< bi patch-question >}} *What colors should I use?*\n- {{< bi patch-check >}} Look at [Color Brewer](https://colorbrewer2.org).\n- See section [Resources](../../resources.qmd) at the website for more details...\n:::\n:::\n\n## Normal distribution\n\n*bell-shaped curve*, *Gaussian distribution*\n\n![](./figs/normal_distribution.png)\n\n## Normal distribution\n\n### One standard deviation *(one sigma)*\n\n![](./figs/sigma1.png)\n\n## Normal distribution {auto-animate=true}\n\n### Two standard deviations *(two sigma)*\n\n![](./figs/sigma2.png)\n\n## Normal distribution {auto-animate=true}\n\n### Three standard deviations *(three sigma)*\n\n![](./figs/sigma3.png)\n\n## Is my distribution normal?\n\n::: {.fragment}\n### Visual aids\n\n::: {.incremental}\n- Density plot\n- Q-Q plot (quantile-quantile plot)  \n  `qqnorm()` or `ggplot(data) + aes(sample = x) + stat_qq()`\n:::\n:::\n\n::: {.fragment}\n### Statistical hypothesis test\n\n::: {.incremental}\n- Shapiro-Wilk test  \n  `shapiro.text()`\n- Kolmogorov-Smirnov normality test\n:::\n:::\n\n## Q-Q plot \n\n\n\n::: {.cell}\n\n:::\n\n\n:::: {.columns}\n::: {.column width=50%}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dartpoints) + aes(x = Length) + geom_density()\n```\n\n::: {.cell-output-display}\n![](norm_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n:::\n::: {.column width=50%}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dartpoints) + aes(x = Thickness) + geom_density()\n```\n\n::: {.cell-output-display}\n![](norm_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n:::\n::::\n\n::: {.fragment}\n:::: {.columns}\n::: {.column width=50%}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dartpoints) + aes(sample = Length) + stat_qq()\n```\n\n::: {.cell-output-display}\n![](norm_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n:::\n::: {.column width=50%}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(dartpoints) + aes(sample = Thickness) + stat_qq()\n```\n\n::: {.cell-output-display}\n![](norm_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n:::\n::::\n:::\n\n## Shapiro-Wilk normality test\n\n::: {.incremental}\n- $H_0$ (null hypothesis): *Values fit normal distribution.*  \n- $H_A$ (alternative hypothesis): *Values do not fit normal distribution.*\n\n- **p-value**: *probability* of the event that observed values fit normal distribution\n- p > 0.05: Fail to reject null hypothesis.\n- *Significance level* = 0.05 â€“ Event occurs in less than 5% of cases\n:::\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshapiro.test(dartpoints$Length)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  dartpoints$Length\nW = 0.90277, p-value = 4.852e-06\n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshapiro.test(dartpoints$Thickness)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  dartpoints$Thickness\nW = 0.98623, p-value = 0.4559\n```\n\n\n:::\n:::\n\n\n:::\n\n## Other shapes of distributions\n\n![](./figs/notnormal.png)\n",
    "supporting": [
      "norm_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}